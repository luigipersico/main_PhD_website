---
title: "Safety Factor q"
format:
    html:
        interactive: false
jupyter: python3
---

The safety factor $q$ expresses the number of toroidal turns a magnetic field line makes for each poloidal turn in a toroidal confinement device, such as a tokamak.

It corresponds to the flux-surface averaged local pitch:

$$
q(\psi) \equiv \langle q_l \rangle_{\theta} = \left\langle \frac{r B_{\varphi}}{R B_{\theta}}  \right\rangle_{\theta}
$$


where $r$ is the minor radius coordinate, $B_{\varphi}$ is the toroidal magnetic field component, $R$ is the major radius, and $B_{\theta}$ is the poloidal magnetic field component.
A higher safety factor generally indicates greater stability against certain plasma instabilities.

With some assumptions it is possible to estimate the safety factor behavior in a tokamak: 
$$
 B_{\varphi} \approx \frac{\mu_0}{2\pi R} I_{coils};
$$
$$
 B_{\theta} \approx \frac{\mu_0}{2\pi r} I_p = \frac{\mu_0}{2} J_p r;
$$

$$
\rightarrow q(\psi) = \left\langle\frac{I_{coils}}{\pi R^2J_p }\right\rangle_{\theta} = \frac{I_{coils}}{I_p}r^2\left\langle\frac{1}{R^2}\right\rangle_{\theta} .
$$

The interactive plot below allows you to explore how this first estimation of the safety factor $q$ depends on key tokamak parameters. You can adjust:

- **$\epsilon$**: The inverse aspect ratio ($a/R_0$), where $a$ is the minor radius and $R_0$ is the major radius.
- **$I_p$**: The plasma current (in Mega Amperes).
- **$I_{coils}$**: The toroidal field coil current (in Mega Amperes).

Use the sliders to see how changes in these parameters affect the safety factor profile.


```{python}
#| echo: false

import numpy as np
import matplotlib.pyplot as plt
from ipywidgets import interact

def safety_factor_plot(eps=0.2841, Ip=1, I_coils = 1):
    a = 0.25
    R0 = a/eps
    Nr = 120
    Nth = 240

    r = np.linspace(a/20, a, Nr)
    theta = np.linspace(0.0, 2*np.pi, Nth)
    R_mesh, TH_mesh = np.meshgrid(r, theta, indexing='xy')
    Rvals = R0 + R_mesh * np.cos(TH_mesh)
    Q_mesh = I_coils / Ip * (R_mesh**2/Rvals**2)
    Q_avg_theta = Q_mesh.mean(axis=0)
    r_norm = r / max(r)

    fig = plt.figure(figsize=(5, 5))
    ax1 = fig.add_subplot(1,1,1)
    ax1.plot(r_norm, Q_avg_theta, lw=2)
    ax1.set_title(r"$\langle q \rangle_{\theta}$ vs $r$")
    ax1.set_xlabel(r"$r/a$")
    ax1.set_ylabel(r"$\langle q \rangle_{\theta}$")
    ax1.grid(True)
    plt.tight_layout()
    plt.show()
    plt.close(fig)

interact(
    safety_factor_plot,
    eps=(0.1, 1.0, 0.01),
    Ip=(1, 20, 1),
    I_coils=(1, 20, 1)
)

```